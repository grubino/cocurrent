# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class FlagSet(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, label: str=None, members: List[int]=None):
        """
        FlagSet - a model defined in Swagger

        :param label: The label of this FlagSet.
        :type label: str
        :param members: The members of this FlagSet.
        :type members: List[int]
        """
        self.swagger_types = {
            'label': str,
            'members': List[int]
        }

        self.attribute_map = {
            'label': 'label',
            'members': 'members'
        }

        self._label = label
        self._members = members

    @classmethod
    def from_dict(cls, dikt) -> 'FlagSet':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FlagSet of this FlagSet.
        :rtype: FlagSet
        """
        return deserialize_model(dikt, cls)

    @property
    def label(self) -> str:
        """
        Gets the label of this FlagSet.

        :return: The label of this FlagSet.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label: str):
        """
        Sets the label of this FlagSet.

        :param label: The label of this FlagSet.
        :type label: str
        """

        self._label = label

    @property
    def members(self) -> List[int]:
        """
        Gets the members of this FlagSet.

        :return: The members of this FlagSet.
        :rtype: List[int]
        """
        return self._members

    @members.setter
    def members(self, members: List[int]):
        """
        Sets the members of this FlagSet.

        :param members: The members of this FlagSet.
        :type members: List[int]
        """

        self._members = members

